# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'anaEkran.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import serial
from PyQt5.QtCore import QTimer
import cv2
import pytesseract
import numpy as np

# Windows için Tesseract yolunu belirtin (sisteminize göre değiştirin)
pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1850, 960)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 1850, 950))
        self.label.setStyleSheet("background-color: black;\n")
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(0, 0, 1851, 71))
        self.label_2.setStyleSheet("background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #282b15, stop:1 #676d42);\n")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(30, 470, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("color: white")
        self.label_14.setObjectName("label_14")
        self.label_21 = QtWidgets.QLabel(self.centralwidget)
        self.label_21.setGeometry(QtCore.QRect(800, 20, 261, 31))
        font = QtGui.QFont()
        font.setFamily("Eurostile")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.label_21.setFont(font)
        self.label_21.setStyleSheet("color: white;\n"
"font-family: \"Eurostile\";\n"
"font-size: 36px;\n"
"font-weight: bold;")
        self.label_21.setObjectName("label_21")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(20, 130, 401, 321))
        self.label_5.setStyleSheet("background-color: RGB(13, 15, 43);\n"
"border: 2px solid #676d42;\n"
"border-top-left-radius: 0px;\n"
"border-top-right-radius: 0px;\n"
"border-bottom-left-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"")
        self.label_5.setText("")
        self.label_5.setObjectName("label_5")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(440, 130, 971, 471))
        self.label_11.setStyleSheet("background-color: RGB(13, 15, 43);\n"
"border: 2px solid #676d42;\n"
"border-top-left-radius: 0px;\n"
"border-top-right-radius: 0px;\n"
"border-bottom-left-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"")
        self.label_11.setText("")
        self.label_11.setObjectName("label_11")
        self.label_19 = QtWidgets.QLabel(self.centralwidget)
        self.label_19.setGeometry(QtCore.QRect(20, 100, 401, 41))
        self.label_19.setStyleSheet("background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #676d42, stop:1 #282b15);\n"
"border-top-left-radius: 15px;\n"
"border-top-right-radius: 15px;\n"
"border-bottom-left-radius: 0px;\n"
"border-bottom-right-radius: 0px;")
        self.label_19.setText("")
        self.label_19.setObjectName("label_19")
        self.label_20 = QtWidgets.QLabel(self.centralwidget)
        self.label_20.setGeometry(QtCore.QRect(440, 100, 971, 41))
        self.label_20.setStyleSheet("background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #676d42, stop:1 #282b15);\n"
"border-top-left-radius: 15px;\n"
"border-top-right-radius: 15px;\n"
"border-bottom-left-radius: 0px;\n"
"border-bottom-right-radius: 0px;")
        self.label_20.setText("")
        self.label_20.setObjectName("label_20")
        self.label_22 = QtWidgets.QLabel(self.centralwidget)
        self.label_22.setGeometry(QtCore.QRect(1430, 100, 401, 41))
        self.label_22.setStyleSheet("background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #676d42, stop:1 #282b15);\n"
"border-top-left-radius: 15px;\n"
"border-top-right-radius: 15px;\n"
"border-bottom-left-radius: 0px;\n"
"border-bottom-right-radius: 0px;")
        self.label_22.setText("")
        self.label_22.setObjectName("label_22")
        self.label_23 = QtWidgets.QLabel(self.centralwidget)
        self.label_23.setGeometry(QtCore.QRect(30, 100, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_23.setFont(font)
        self.label_23.setStyleSheet("color: white")
        self.label_23.setObjectName("label_23")
        self.label_24 = QtWidgets.QLabel(self.centralwidget)
        self.label_24.setGeometry(QtCore.QRect(450, 100, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_24.setFont(font)
        self.label_24.setStyleSheet("color: white")
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(self.centralwidget)
        self.label_25.setGeometry(QtCore.QRect(1440, 100, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_25.setFont(font)
        self.label_25.setStyleSheet("color: white")
        self.label_25.setObjectName("label_25")
        self.label_27 = QtWidgets.QLabel(self.centralwidget)
        self.label_27.setGeometry(QtCore.QRect(20, 840, 401, 51))
        self.label_27.setStyleSheet("background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #676d42, stop:1 #282b15);\n"
"border-top-left-radius: 15px;\n"
"border-top-right-radius: 15px;\n"
"border-bottom-left-radius: 15px;\n"
"border-bottom-right-radius: 15px;")
        self.label_27.setText("")
        self.label_27.setObjectName("label_27")
        self.label_30 = QtWidgets.QLabel(self.centralwidget)
        self.label_30.setGeometry(QtCore.QRect(1430, 840, 401, 51))
        self.label_30.setStyleSheet("background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #676d42, stop:1 #282b15);\n"
"border-top-left-radius: 15px;\n"
"border-top-right-radius: 15px;\n"
"border-bottom-left-radius: 15px;\n"
"border-bottom-right-radius: 15px;")
        self.label_30.setText("")
        self.label_30.setObjectName("label_30")
        self.label_31 = QtWidgets.QLabel(self.centralwidget)
        self.label_31.setGeometry(QtCore.QRect(30, 850, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_31.setFont(font)
        self.label_31.setStyleSheet("color: white")
        self.label_31.setObjectName("label_31")
        self.hizCubuguLbl = QtWidgets.QLabel(self.centralwidget)
        self.hizCubuguLbl.setGeometry(QtCore.QRect(176, 663, 51, 51))
        self.hizCubuguLbl.setStyleSheet("")
        self.hizCubuguLbl.setText("")
        self.hizCubuguLbl.setTextFormat(QtCore.Qt.PlainText)
        self.hizCubuguLbl.setPixmap(QtGui.QPixmap("cubuk.png"))
        self.hizCubuguLbl.setScaledContents(False)
        self.hizCubuguLbl.setAlignment(QtCore.Qt.AlignCenter)
        self.hizCubuguLbl.setObjectName("hizCubuguLbl")
        self.lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber.setGeometry(QtCore.QRect(200, 728, 48, 23))
        self.lcdNumber.setProperty("intValue", 0)
        self.lcdNumber.setObjectName("lcdNumber")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(440, 650, 971, 241))
        self.label_6.setStyleSheet("background-color: RGB(13, 15, 43);\n"
"border: 2px solid #676d42;\n"
"border-top-left-radius: 0px;\n"
"border-top-right-radius: 0px;\n"
"border-bottom-left-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"")
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(20, 470, 401, 41))
        self.label_9.setStyleSheet("background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #676d42, stop:1 #282b15);\n"
"border-top-left-radius: 15px;\n"
"border-top-right-radius: 15px;\n"
"border-bottom-left-radius: 0px;\n"
"border-bottom-right-radius: 0px;")
        self.label_9.setText("")
        self.label_9.setObjectName("label_9")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(20, 500, 401, 321))
        self.label_7.setStyleSheet("background-color: RGB(13, 15, 43);\n"
"border: 2px solid #676d42;\n"
"border-top-left-radius: 0px;\n"
"border-top-right-radius: 0px;\n"
"border-bottom-left-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"")
        self.label_7.setText("")
        self.label_7.setObjectName("label_7")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(440, 620, 971, 41))
        self.label_10.setStyleSheet("background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #676d42, stop:1 #282b15);\n"
"border-top-left-radius: 15px;\n"
"border-top-right-radius: 15px;\n"
"border-bottom-left-radius: 0px;\n"
"border-bottom-right-radius: 0px;")
        self.label_10.setText("")
        self.label_10.setObjectName("label_10")
        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(1430, 500, 401, 321))
        self.label_15.setStyleSheet("background-color: RGB(13, 15, 43);\n"
"border: 2px solid #676d42;\n"
"border-top-left-radius: 0px;\n"
"border-top-right-radius: 0px;\n"
"border-bottom-left-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"")
        self.label_15.setText("")
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(1430, 470, 401, 41))
        self.label_16.setStyleSheet("background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #676d42, stop:1 #282b15);\n"
"border-top-left-radius: 15px;\n"
"border-top-right-radius: 15px;\n"
"border-bottom-left-radius: 0px;\n"
"border-bottom-right-radius: 0px;")
        self.label_16.setText("")
        self.label_16.setObjectName("label_16")
        self.hizGostergeLbl = QtWidgets.QLabel(self.centralwidget)
        self.hizGostergeLbl.setGeometry(QtCore.QRect(100, 540, 250, 250))
        self.hizGostergeLbl.setText("")
        self.hizGostergeLbl.setPixmap(QtGui.QPixmap(":/speed/hizGosterge.png"))
        self.hizGostergeLbl.setScaledContents(False)
        self.hizGostergeLbl.setAlignment(QtCore.Qt.AlignCenter)
        self.hizGostergeLbl.setObjectName("hizGostergeLbl")
        self.label_33 = QtWidgets.QLabel(self.centralwidget)
        self.label_33.setGeometry(QtCore.QRect(1440, 850, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_33.setFont(font)
        self.label_33.setStyleSheet("color: white")
        self.label_33.setObjectName("label_33")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(1430, 130, 401, 321))
        self.label_8.setStyleSheet("background-color: RGB(13, 15, 43);\n"
"border: 2px solid #676d42;\n"
"border-top-left-radius: 0px;\n"
"border-top-right-radius: 0px;\n"
"border-bottom-left-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"")
        self.label_8.setText("")
        self.label_8.setObjectName("label_8")
        self.label_34 = QtWidgets.QLabel(self.centralwidget)
        self.label_34.setGeometry(QtCore.QRect(1440, 470, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_34.setFont(font)
        self.label_34.setStyleSheet("color: white")
        self.label_34.setObjectName("label_34")
        self.label_17 = QtWidgets.QLabel(self.centralwidget)
        self.label_17.setGeometry(QtCore.QRect(450, 620, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_17.setFont(font)
        self.label_17.setStyleSheet("color: white")
        self.label_17.setObjectName("label_17")
        self.onKameraLabel = QtWidgets.QLabel(self.centralwidget)
        self.onKameraLabel.setGeometry(QtCore.QRect(450, 150, 951, 441))
        self.onKameraLabel.setText("")
        self.onKameraLabel.setPixmap(QtGui.QPixmap("on_Kamera.png"))
        self.onKameraLabel.setScaledContents(False)
        self.onKameraLabel.setObjectName("onKameraLabel")
        self.solKameraLbl = QtWidgets.QLabel(self.centralwidget)
        self.solKameraLbl.setGeometry(QtCore.QRect(30, 150, 381, 291))
        self.solKameraLbl.setText("")
        self.solKameraLbl.setPixmap(QtGui.QPixmap("yan_Kamera.png"))
        self.solKameraLbl.setScaledContents(True)
        self.solKameraLbl.setObjectName("solKameraLbl")
        self.sagKameraLbl = QtWidgets.QLabel(self.centralwidget)
        self.sagKameraLbl.setGeometry(QtCore.QRect(1440, 150, 381, 291))
        self.sagKameraLbl.setText("")
        self.sagKameraLbl.setPixmap(QtGui.QPixmap("yan_Kamera.png"))
        self.sagKameraLbl.setScaledContents(False)
        self.sagKameraLbl.setObjectName("sagKameraLbl")
        self.emg_button = QtWidgets.QPushButton(self.centralwidget)
        self.emg_button.setGeometry(QtCore.QRect(1560, 570, 160, 160))
        self.emg_button.setStyleSheet("QPushButton {\n"
"    border: none;  /* Çerçeveyi kaldır */\n"
"    border-radius: 40px;  /* Yuvarlak buton */\n"
"    background-color: transparent;  /* Arka planı şeffaf yap */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgba(255, 0, 0, 0.2);  /* Üzerine gelince hafif kırmızı efekt */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgba(255, 0, 0, 0.4);  /* Basıldığında daha koyu kırmızı efekt */\n"
"}")
        self.emg_button.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("emergency_button.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.emg_button.setIcon(icon)
        self.emg_button.setIconSize(QtCore.QSize(160, 160))
        self.emg_button.setObjectName("emg_button")
        self.chargeBar = QtWidgets.QProgressBar(self.centralwidget)
        self.chargeBar.setGeometry(QtCore.QRect(160, 850, 241, 31))
        self.chargeBar.setStyleSheet("QProgressBar#chargeBar {\n"
"    background-color: #E5E7EB;  /* Açık gri-beyaz arka plan */\n"
"    border: 2px solid #D1D5DB;  /* Hafif gri çerçeve */\n"
"    border-radius: 10px;  /* Yuvarlak kenarlar */\n"
"    height: 20px;  /* Yükseklik */\n"
"    text-align: center;  /* Metni ortala */\n"
"    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);  /* Hafif gölge efekti */\n"
"}\n"
"\n"
"QProgressBar#chargeBar::chunk {\n"
"    background: qlineargradient(x1:0, y1:0, x2:1, y2:0, \n"
"        stop:0  #676d42, stop:1  #676d42);  /* Beyazdan açık griye gradyan (dolu kısım) */\n"
"    border-radius: 8px;  /* İç çubuğun yuvarlak kenarları */\n"
"    border: 1px solid #FFFFFF;  /* Beyaz kenarlık */\n"
"}\n"
"\n"
"QProgressBar#chargeBar::text {\n"
"    color: #000000 !important;  /* Metni siyah yap */\n"
"    font-weight: bold;  /* Kalın yazı tipi */\n"
"    font-size: 12px;  /* Yazı boyutu */\n"
"    text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.5);  /* Hafif beyaz gölge efekti */\n"
"}")
        self.chargeBar.setProperty("value", 24)
        self.chargeBar.setObjectName("chargeBar")
        self.mapView = QtWidgets.QGraphicsView(self.centralwidget)
        self.mapView.setGeometry(QtCore.QRect(450, 670, 951, 191))
        self.mapView.setStyleSheet("    QGraphicsView#mapView {\n"
"    background-image: url(:/emergancy/harita.png);  /* Arka plan resmi */\n"
"    background-color: transparent;  /* Arka plan rengini şeffaf yap */\n"
"    background-position: center;  /* Resmi ortala */\n"
"    background-repeat: no-repeat;  /* Resmi tekrar etme */\n"
"    border: none;  /* Kenarlıkları kaldır */\n"
"}\n"
"\n"
"QGraphicsView#mapView > QScrollBar {\n"
"    background: transparent;  /* Scrollbar’ı şeffaf yap */\n"
"    width: 0px;  /* Scrollbar’ı gizle */\n"
"    height: 0px;\n"
"}")
        self.mapView.setObjectName("mapView")
        self.egimLbl = QtWidgets.QLabel(self.centralwidget)
        self.egimLbl.setGeometry(QtCore.QRect(1620, 845, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(48)
        font.setBold(False)
        font.setWeight(50)
        self.egimLbl.setFont(font)
        self.egimLbl.setStyleSheet("color: white")
        self.egimLbl.setObjectName("egimLbl")
        self.acilStopBilgiLbl = QtWidgets.QLabel(self.centralwidget)
        self.acilStopBilgiLbl.setGeometry(QtCore.QRect(1520, 750, 241, 41))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.acilStopBilgiLbl.setFont(font)
        self.acilStopBilgiLbl.setStyleSheet("color: white")
        self.acilStopBilgiLbl.setObjectName("acilStopBilgiLbl")
        self.label.raise_()
        self.label_2.raise_()
        self.label_21.raise_()
        self.label_5.raise_()
        self.label_11.raise_()
        self.label_27.raise_()
        self.label_30.raise_()
        self.label_31.raise_()
        self.label_6.raise_()
        self.label_7.raise_()
        self.label_10.raise_()
        self.label_15.raise_()
        self.label_16.raise_()
        self.label_33.raise_()
        self.label_20.raise_()
        self.label_24.raise_()
        self.hizGostergeLbl.raise_()
        self.hizCubuguLbl.raise_()
        self.lcdNumber.raise_()
        self.label_9.raise_()
        self.label_14.raise_()
        self.label_19.raise_()
        self.label_23.raise_()
        self.label_8.raise_()
        self.label_22.raise_()
        self.label_25.raise_()
        self.label_34.raise_()
        self.label_17.raise_()
        self.onKameraLabel.raise_()
        self.solKameraLbl.raise_()
        self.sagKameraLbl.raise_()
        self.emg_button.raise_()
        self.chargeBar.raise_()
        self.mapView.raise_()
        self.egimLbl.raise_()
        self.acilStopBilgiLbl.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1850, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_14.setText(_translate("MainWindow", "Hız:"))
        self.label_21.setText(_translate("MainWindow", "T A R U M A R"))
        self.label_23.setText(_translate("MainWindow", "Sol Kamera:"))
        self.label_24.setText(_translate("MainWindow", "Ön Kamera:"))
        self.label_25.setText(_translate("MainWindow", "Sağ Kamera:"))
        self.label_31.setText(_translate("MainWindow", "Batarya:"))
        self.label_33.setText(_translate("MainWindow", "Eğim:"))
        self.label_34.setText(_translate("MainWindow", "Acil Stop:"))
        self.label_17.setText(_translate("MainWindow", "Harita:"))
        self.egimLbl.setText(_translate("MainWindow", "-"))
        self.acilStopBilgiLbl.setText(_translate("MainWindow", "Acil Stop Devre Dışı"))

class MainWindow(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)

        # Seri port bağlantısını başlat
        try:
            self.serial_port = serial.Serial('COM3', 9600, timeout=1)
        except serial.SerialException as e:
            print(f"Seri port bağlantı hatası: {e}")
            self.serial_port = None

        # Seri port verilerini okumak için timer
        self.serial_timer = QTimer()
        self.serial_timer.timeout.connect(self.read_serial_data)
        self.serial_timer.start(100)

        # Bilgisayarın web kamerasını başlat
        self.cap = cv2.VideoCapture(0)
        if not self.cap.isOpened():
            print("Web kamera bağlantısı başarısız!")
            self.cap = None
        else:
            # Çözünürlüğü 951x441 olarak ayarla
            self.cap.set(cv2.CAP_PROP_FRAME_WIDTH, 951)
            self.cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 441)
            # Ayarlanan çözünürlüğü kontrol et
            actual_width = self.cap.get(cv2.CAP_PROP_FRAME_WIDTH)
            actual_height = self.cap.get(cv2.CAP_PROP_FRAME_HEIGHT)
            print(f"Ayarlanan kamera çözünürlüğü: {int(actual_width)}x{int(actual_height)}")

        # Kamera akışını güncellemek için timer
        self.camera_timer = QTimer()
        self.camera_timer.timeout.connect(self.update_camera_feed)
        self.camera_timer.start(30)

        # EMG butonuna tıklama olayını bağla
        self.emg_button.clicked.connect(self.emergency_stop)

        # Arazi türü sözlüğü
        self.terrain_map = {
            '1': 'Dik Engel',
            '2': 'Tasli Yol',
            '3': 'Yan Egimli Yol',
            '4': 'Hizlanma',
            '5': 'Sudan Gecis',
            '6': 'Trafik Konileri',
            '7': 'Engebeli Arazi'
        }
        self.current_terrain = "Bilinmiyor"
        self.last_detected_number = None  # Son algılanan numarayı takip etmek için

    def detect_number(self, frame):
        """Kameradan gelen görüntüde sadece 1-7 sayılarından birini OCR ile tespit et."""
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        # Daha fazla gürültü azaltma ve kontrast artırma
        gray = cv2.GaussianBlur(gray, (7, 7), 0)  # Daha büyük blur kerneli
        gray = cv2.adaptiveThreshold(gray, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 11, 2)
        # Morfolojik işlemlerle gürültüyü temizle
        kernel = np.ones((3, 3), np.uint8)
        gray = cv2.morphologyEx(gray, cv2.MORPH_CLOSE, kernel)

        # OCR ile rakamı algıla, sadece 1-7 sayıları için whitelist
        text = pytesseract.image_to_string(gray, config='--psm 10 --oem 3 -c tessedit_char_whitelist=1234567')
        text = text.strip()

        if text in ['1', '2', '3', '4', '5', '6', '7']:
            # Tespit edilen rakamın etrafına bir dikdörtgen çizmek için yaklaşık bir bölge
            h, w = gray.shape
            x, y, w, h = w // 4, h // 4, w // 2, h // 2  # Görüntünün merkezine bir dikdörtgen
            return text, (x, y, w, h)
        return None, None

    def update_camera_feed(self):
        """Kamera akışını oku, sadece sayı algılandığında görüntüyü işle ve arazi bilgisini göster."""
        if self.cap and self.cap.isOpened():
            ret, frame = self.cap.read()
            if ret:
                # Görüntüyü 951x441 olarak yeniden boyutlandır
                frame = cv2.resize(frame, (951, 441), interpolation=cv2.INTER_AREA)

                # Görüntüyü RGB formatına çevir
                frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

                # Numara tespiti, sadece bir sayı algılandığında işlem yap
                number, bbox = self.detect_number(frame)
                if number:
                    self.process_terrain(number)
                    if bbox:
                        x, y, w, h = bbox
                        cv2.rectangle(frame_rgb, (x, y), (x + w, y + h), (0, 255, 0), 2)
                else:
                    # Hiçbir sayı algılanmadıysa araziyi "Bilinmiyor" olarak sıfırla
                    self.current_terrain = "Bilinmiyor"
                    self.last_detected_number = None

                # Arazi bilgisini sol üst köşeye ekle
                cv2.putText(frame_rgb, f"Arazi: {self.current_terrain}",
                            (10, 30),
                            cv2.FONT_HERSHEY_SIMPLEX, 0.7, (255, 255, 255), 2, cv2.LINE_AA)

                # OpenCV görüntüsünü QImage'e çevir
                h, w, ch = frame_rgb.shape
                bytes_per_line = ch * w
                q_image = QtGui.QImage(frame_rgb.data, w, h, bytes_per_line, QtGui.QImage.Format_RGB888)
                self.onKameraLabel.setPixmap(QtGui.QPixmap.fromImage(q_image))
            else:
                print("Kamera karesi alınamadı!")

    def process_terrain(self, number):
        """Tespit edilen numaraya göre arazi türünü belirle ve komut gönder."""
        if number in self.terrain_map and number != self.last_detected_number:
            self.current_terrain = self.terrain_map[number]
            self.last_detected_number = number  # Son algılanan numarayı güncelle
            if self.serial_port and self.serial_port.is_open:
                try:
                    command = f"TERRAIN_{number}\n".encode()
                    self.serial_port.write(command)
                    print(f"Gönderilen komut: TERRAIN_{number}")  # Sadece sayı algılandığında çıktı
                except serial.SerialException as e:
                    print(f"Komut gönderilirken hata: {e}")
        elif number not in self.terrain_map:
            self.current_terrain = "Bilinmiyor"
            self.last_detected_number = None


    def read_serial_data(self):
        """Arduino'dan veri oku (örneğin hız verisi)."""
        if self.serial_port and self.serial_port.in_waiting > 0:
            try:
                data = self.serial_port.readline().decode('utf-8').strip()
                speed = float(data)
                print(f"Alınan hız: {speed} km/h")
                self.lcdNumber.display(speed)
            except (ValueError, UnicodeDecodeError):
                print("Hatalı veri alındı, atlanıyor...")

    def emergency_stop(self):
        """Acil stop butonuna basıldığında cihazı durdur ve bağlantıları kapat."""
        print("Acil stop butonuna basıldı!")
        # Acil Stop Bilgi etiketini güncelle
        self.acilStopBilgiLbl.setText("Acil Stop Devrede")

        if self.serial_port and self.serial_port.is_open:
            try:
                self.serial_port.write(b"STOP\n")
                print("Arduino'ya STOP komutu gönderildi.")
            except serial.SerialException as e:
                print(f"STOP komutu gönderilirken hata: {e}")
        self.serial_timer.stop()
        print("Seri port timer'ı durduruldu.")
        if self.serial_port and self.serial_port.is_open:
            self.serial_port.close()
            print("Seri port bağlantısı kapatıldı.")
            self.serial_port = None
        if self.cap and self.cap.isOpened():
            self.cap.release()
            print("Kamera bağlantısı kapatıldı.")
        self.camera_timer.stop()
        print("Kamera timer'ı durduruldu.")

    def closeEvent(self, event):
        """Pencere kapatıldığında seri portu ve kamerayı kapat."""
        if self.serial_port and self.serial_port.is_open:
            self.serial_port.close()
            print("Seri port bağlantısı kapatıldı.")
        if self.cap and self.cap.isOpened():
            self.cap.release()
            print("Kamera bağlantısı kapatıldı.")
        event.accept()

import emg_rc
import hiz_rc
import kamera_rc

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())